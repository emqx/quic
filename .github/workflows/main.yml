name: ci
on: [push, pull_request]

jobs:
  mac:
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: prepare
        run: |
          brew update
          brew install erlang@23
      - name: install rebar3
        run: |
          wget https://s3.amazonaws.com/rebar3/rebar3 && chmod +x rebar3
          cp ./rebar3 /usr/local/bin/rebar3
      - name: release build
        run: |
          export PATH="/usr/local/opt/erlang@23/bin:$PATH"
          ulimit -c unlimited
          make ci

      - name: Archive CT Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: mac-ct-logs
          path: _build/test/logs
          retention-days: 5

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [22.3.4.9, 23.2, 24.0.2]
        build_type: [RelWithDebInfo, Debug]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: gleam-lang/setup-erlang@v1.1.2
        with:
          otp-version: ${{ matrix.otp }}
      - name: release build with debug log off
        run: |
          sudo sysctl -w kernel.core_pattern=core
          ulimit -c unlimited
          export CMAKE_BUILD_TYPE=${{ matrix.build_type }}
          export QUIC_ENABLE_LOGGING=ON
          sudo apt-add-repository ppa:lttng/stable-2.13
          sudo apt-get update
          sudo apt-get install -y lttng-tools lttng-modules-dkms babeltrace liblttng-ust-dev
          which lttng
          uname -a
          mkdir msquic_lttng
          lttng create msquic -o=./msquic_lttng
          lttng enable-event --userspace CLOG_*
          lttng add-context --userspace --type=vpid --type=vtid
          lttng start

          cleanup () {
            lttng stop msquic;
            babeltrace --names all ./msquic_lttng/* > _build/test/quic.babel.txt
          }

          trap "cleanup"  EXIT
          make ci
      - name: Archive CT Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: linux-ct-logs
          path: _build/test/
          retention-days: 5

  multiarch:
    ### note:
    ### -  only verify compilation because qemu user env has no support for some socket opt
    runs-on: ubuntu-latest
    steps:
    - run: |
        docker run --rm --privileged multiarch/qemu-user-static:register --reset

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: make ci arm32v7
      uses: docker://emqx/build-env:erl24.0.1-emqx-1-alpine-arm32v7
      with:
        args: >
          make

    - name: make ci arm64v8
      uses: docker://emqx/build-env:erl24.0.1-emqx-1-alpine-arm64v8
      with:
        args: >
          make

    - name: Archive CT Logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: linux-ct-logs
        path: _build/test/
        retention-days: 5
