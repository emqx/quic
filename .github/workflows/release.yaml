name: release

on:
  push:
    tags:
      - "*"
    branches:
      - 'ci/**'
jobs:
  mac:
    strategy:
      fail-fast: false
      matrix:
        otp:
          - 25.3.2-1
        os:
          - macos-12
          - macos-11
          - macos-12-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: emqx/setup-otp@v1.0.0
        with:
          os: ${{ matrix.os }}
          otp: ${{ matrix.otp }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: build release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          BUILD_RELEASE=1 make

      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: |
            _packages/*.gz
            _packages/*.gz.sha256

  linux:
    strategy:
      fail-fast: false
      matrix:
        builder:
          - 5.1-3
        otp:
          - 25.3.2-1
        openssl:
          - openssl3
          - openssl
        elixir:
          - 1.14.5
        arch:
          - amd64
          - arm64
        os:
          - ubuntu22.04
          - ubuntu20.04
          - ubuntu18.04
          - ubuntu16.04
          - debian12
          - debian11
          - debian10
          - debian9
          - amzn2023
          - el7
          - el8
          - el9
          - alpine3.15.1
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install rebar3
        run: |
          wget https://s3.amazonaws.com/rebar3/rebar3 && chmod +x rebar3
          cp ./rebar3 /usr/local/bin/rebar3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch }}

      - name: build release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE=ghcr.io/emqx/emqx-builder/${{ matrix.builder }}:${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.os }}
          docker run -i --rm -v $(pwd):/wd --workdir /wd --platform=linux/${{ matrix.arch }} \
          -e BUILD_RELEASE=1 -e QUIC_TLS=${{ matrix.openssl }} \
          $IMAGE bash -euc 'git config --global --add safe.directory /wd; make'

      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: |
            _packages/*.gz
            _packages/*.gz.sha256

  release:
    runs-on: ubuntu-latest
    needs:
      - mac
      - linux
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: packages
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: quicer ${{ github.ref_name }} Released
          body: quicer ${{ github.ref_name }} Released
          files: packages/*
          draft: false
          prerelease: false
